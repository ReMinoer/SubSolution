<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">

    <xs:element name="SubSolutionConfiguration">
        <xs:complexType>
            <xs:annotation>
                <xs:documentation>Root element of a SubSolution configuration.</xs:documentation>
            </xs:annotation>
            <xs:all>
                <xs:element name="Root" type="SolutionRoot" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Root of the solution.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Configurations" type="SolutionConfigurationList" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Solution configuration list.</xs:documentation>
                    </xs:annotation>
                </xs:element>
                <xs:element name="Platforms" type="SolutionPlatformList" minOccurs="0">
                    <xs:annotation>
                        <xs:documentation>Solution platform list.</xs:documentation>
                    </xs:annotation>
                </xs:element>
            </xs:all>
            <xs:attribute name="SolutionName" type="FileName">
                <xs:annotation>
                    <xs:documentation>Solution output file name (without extension).</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="OutputDirectory" type="DirectoryPath">
                <xs:annotation>
                    <xs:documentation>Solution output directory path.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
            <xs:attribute name="WorkspaceDirectory" type="DirectoryPath">
                <xs:annotation>
                    <xs:documentation>Workspace directory used as root for configuration paths.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:complexType name="SolutionConfigurationList">
        <xs:annotation>
            <xs:documentation>Represent a solution configuration list.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Configuration" type="SolutionConfiguration" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Solution configuration.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SolutionConfiguration">
        <xs:annotation>
            <xs:documentation>Represent a solution configuration.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="ProjectConfiguration" type="ProjectConfigurationMatch" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Project configuration to match.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="Name" type="ConfigurationPlatformName" use="required">
            <xs:annotation>
                <xs:documentation>Configuration name.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="ProjectConfigurationMatch">
        <xs:annotation>
            <xs:documentation>Represent a project configuration to match.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="Match" type="ConfigurationPlatformName" use="required">
            <xs:annotation>
                <xs:documentation>Project configuration name part to match.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="SolutionPlatformList">
        <xs:annotation>
            <xs:documentation>Represent a solution platform list.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="Platform" type="SolutionPlatform" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Solution platform.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="SolutionPlatform">
        <xs:annotation>
            <xs:documentation>Represent a solution platform.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="ProjectPlatform" type="ProjectPlatformMatch" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>Project platform to match.</xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="Name" type="ConfigurationPlatformName" use="required">
            <xs:annotation>
                <xs:documentation>Platform name.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="ProjectPlatformMatch">
        <xs:annotation>
            <xs:documentation>Represent a project platform to match.</xs:documentation>
        </xs:annotation>
        <xs:attribute name="Match" type="ConfigurationPlatformName" use="required">
            <xs:annotation>
                <xs:documentation>Project platform name part to match.</xs:documentation>
            </xs:annotation>
        </xs:attribute>
    </xs:complexType>

    <xs:element name="SolutionItems" type="SolutionItemsSourceBase" abstract="true">
        <xs:annotation>
            <xs:documentation>Solution item source.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="Root" type="SolutionRoot" abstract="true" substitutionGroup="SolutionItems">
        <xs:annotation>
            <xs:documentation>Solution root.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="Folder" type="SolutionFolder" substitutionGroup="Root">
        <xs:annotation>
            <xs:documentation>Solution folder.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="SolutionFiles" type="SolutionFilesSourceBase" abstract="true" substitutionGroup="SolutionItems">
        <xs:annotation>
            <xs:documentation>Solution file source.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="Projects" type="ProjectsSource" substitutionGroup="SolutionFiles">
        <xs:annotation>
            <xs:documentation>Set of projects.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="Files" type="FilesSource" substitutionGroup="SolutionFiles">
        <xs:annotation>
            <xs:documentation>Set of files.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="SolutionContentFiles" type="SolutionsContentSourceBase" abstract="true" substitutionGroup="SolutionFiles">
        <xs:annotation>
            <xs:documentation>Solution file source.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="Solutions" type="SolutionsSource" substitutionGroup="SolutionContentFiles">
        <xs:annotation>
            <xs:documentation>Set of solution files.</xs:documentation>
        </xs:annotation>
    </xs:element>
    <xs:element name="SubSolutions" type="SubSolutionsSource" substitutionGroup="SolutionContentFiles">
        <xs:annotation>
            <xs:documentation>Set of SubSolution configurations files.</xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:complexType name="SolutionItemsSourceBase" abstract="true">
        <xs:annotation>
            <xs:documentation>Base representation of a set of solution items.</xs:documentation>
        </xs:annotation>
    </xs:complexType>

    <xs:complexType name="SolutionRoot">
        <xs:annotation>
            <xs:documentation>Represent a solution root.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SolutionItemsSourceBase">
                <xs:sequence>
                    <xs:element ref="SolutionItems" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
                <xs:attribute name="CollapseEmptyFolders" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True to collapse empty folder with its child folders. Propagate to sub-folders.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="RemoveUniqueItemFolders" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True to remove folder with an unique item. Propagate to sub-folders.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ConflictProjectsOutputDirectory" type="xs:anyURI">
                    <xs:annotation>
                        <xs:documentation>Output directory used to create conflict solving projects.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SolutionFolder">
        <xs:annotation>
            <xs:documentation>Represent a solution folder.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SolutionRoot">
                <xs:attribute name="Name" type="SolutionFolderName" use="required">
                    <xs:annotation>
                        <xs:documentation>Name of the solution folder.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SolutionFilesSourceBase" abstract="true">
        <xs:annotation>
            <xs:documentation>Base representation of a set of solution files.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SolutionItemsSourceBase">
                <xs:attribute ref="Path" />
                <xs:attribute name="Overwrite" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True to process files already contained in solution.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="CreateFolders" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True to create folders matching file system hierarchy.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:attribute name="Path" type="PathGlobPattern">
        <xs:annotation>
            <xs:documentation>Path used to filter files. Use a glob pattern to match multiple files.</xs:documentation>
        </xs:annotation>
    </xs:attribute>

    <xs:complexType name="ProjectsSource">
        <xs:annotation>
            <xs:documentation>Represent a set of projects.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SolutionFilesSourceBase">
                <xs:all>
                    <xs:element name="Where" type="ProjectFilterRoot" minOccurs="0" />
                </xs:all>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="FilesSource">
        <xs:annotation>
            <xs:documentation>Represent a set of files.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SolutionFilesSourceBase">
                <xs:all>
                    <xs:element name="Where" type="FileFilterRoot" minOccurs="0" />
                </xs:all>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SolutionsContentSourceBase" abstract="true">
        <xs:annotation>
            <xs:documentation>Represent a file defining a solution content.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SolutionFilesSourceBase">
                <xs:all>
                    <xs:element name="Where" type="FileFilterRoot" minOccurs="0" />
                    <xs:element name="WhereProjects" type="IgnorableProjectFilterRoot" minOccurs="0" />
                    <xs:element name="WhereFiles" type="IgnorableFileFilterRoot" minOccurs="0" />
                </xs:all>
                <xs:attribute name="CreateRootFolder" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True to create a dedicated folder for each solution. Folder name will be its SolutionName.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
                <xs:attribute name="ReverseOrder" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True to reverse matching files order. Deep files will be treated before files contained in parent folders.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SolutionsSource">
        <xs:annotation>
            <xs:documentation>Represent a set of solution files.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SolutionsContentSourceBase" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="SubSolutionsSource">
        <xs:annotation>
            <xs:documentation>Represent a set of SubSolution files.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="SolutionsContentSourceBase" />
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="ProjectFilterRoot">
        <xs:annotation>
            <xs:documentation>Project filter root.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="ProjectFilters" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="FileFilterRoot">
        <xs:annotation>
            <xs:documentation>File filter root.</xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element ref="FileFilters" minOccurs="0" maxOccurs="unbounded" />
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="IgnorableProjectFilterRoot">
        <xs:annotation>
            <xs:documentation>Project filter root able to ignore all.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="ProjectFilterRoot">
                <xs:attribute name="IgnoreAll" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True to ignore all projects.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:complexType name="IgnorableFileFilterRoot">
        <xs:annotation>
            <xs:documentation>File filter root able to ignore all.</xs:documentation>
        </xs:annotation>
        <xs:complexContent>
            <xs:extension base="FileFilterRoot">
                <xs:attribute name="IgnoreAll" type="xs:boolean">
                    <xs:annotation>
                        <xs:documentation>True to ignore all files.</xs:documentation>
                    </xs:annotation>
                </xs:attribute>
            </xs:extension>
        </xs:complexContent>
    </xs:complexType>

    <xs:element name="ProjectFilters" abstract="true">
        <xs:annotation>
            <xs:documentation>Project filter.</xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="ProjectNot" substitutionGroup="ProjectFilters">
        <xs:annotation>
            <xs:documentation>Reverse filter.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ProjectFilters" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="ProjectMatchAll" substitutionGroup="ProjectFilters">
        <xs:annotation>
            <xs:documentation>Match all children filters.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ProjectFilters" minOccurs="1" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="ProjectMatchAnyOf" substitutionGroup="ProjectFilters">
        <xs:annotation>
            <xs:documentation>Match any of children filters.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="ProjectFilters" minOccurs="1" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="ProjectPath" substitutionGroup="ProjectFilters">
        <xs:annotation>
            <xs:documentation>Filter matching file path pattern.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="Match" type="PathGlobPattern" use="required">
                <xs:annotation>
                    <xs:documentation>Project path pattern.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:element name="FileFilters" abstract="true">
        <xs:annotation>
            <xs:documentation>File filter.</xs:documentation>
        </xs:annotation>
    </xs:element>

    <xs:element name="FileNot" substitutionGroup="FileFilters">
        <xs:annotation>
            <xs:documentation>Reverse filter.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileFilters" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="FileMatchAll" substitutionGroup="FileFilters">
        <xs:annotation>
            <xs:documentation>Match all children filters.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileFilters" minOccurs="1" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="FileMatchAnyOf" substitutionGroup="FileFilters">
        <xs:annotation>
            <xs:documentation>Match any of children filters.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:sequence>
                <xs:element ref="FileFilters" minOccurs="1" maxOccurs="unbounded" />
            </xs:sequence>
        </xs:complexType>
    </xs:element>

    <xs:element name="FilePath" substitutionGroup="FileFilters">
        <xs:annotation>
            <xs:documentation>Filter matching file path pattern.</xs:documentation>
        </xs:annotation>
        <xs:complexType>
            <xs:attribute name="Match" type="PathGlobPattern" use="required">
                <xs:annotation>
                    <xs:documentation>File path pattern.</xs:documentation>
                </xs:annotation>
            </xs:attribute>
        </xs:complexType>
    </xs:element>

    <xs:simpleType name="PathGlobPattern">
        <xs:annotation>
            <xs:documentation>Path glob pattern.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="DirectoryPath">
        <xs:annotation>
            <xs:documentation>Directory path.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="FileName">
        <xs:annotation>
            <xs:documentation>File name.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ProjectName">
        <xs:annotation>
            <xs:documentation>Project name.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="SolutionFolderName">
        <xs:annotation>
            <xs:documentation>Solution folder name.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9a-zA-Z]+" />
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="ConfigurationPlatformName">
        <xs:annotation>
            <xs:documentation>Configuration or platform name.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:pattern value="[0-9a-zA-Z ]+" />
        </xs:restriction>
    </xs:simpleType>

</xs:schema>
